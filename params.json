{
  "name": "functionalswitch",
  "tagline": "A functional approach to the switch statement",
  "body": "# functionalswitch\r\n\r\nA functional approach to the switch statement.\r\n\r\n- [Install](#install)\r\n- [Quickstart Guide](quickstart) - How to include Functional Java in your project and get started\r\n\r\n<a name=\"install\"></a>\r\n## Install\r\n\r\n[JitPack](https://jitpack.io/#MpStyle/functionalswitch)\r\n\r\n<a name=\"quickstart\"></a>\r\n## Quickstart Guide\r\n\r\nThere are 3 ways to create a functional switch, using:\r\n\r\n- [**Callable**](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Callable.html): only returns value  \r\n- [**Callback**](): only receives parameters (from 1 to 5)\r\n- [**Function**](https://github.com/bodar/totallylazy/): receives parameters (from 1 to 5) and return values\r\n\r\n### Callable example\r\n\r\n```java\r\ncallableSwitch.add(\"key1\", new Callable<String>() {\r\n    @Override\r\n    public String call() throws Exception {\r\n        return \"key1\";\r\n    }\r\n}).add(\"key2\", new Callable<String>() {\r\n    @Override\r\n    public String call() throws Exception {\r\n        return \"key2\";\r\n    }\r\n}).add(\"key3\", new Callable<String>() {\r\n    @Override\r\n    public String call() throws Exception {\r\n        return \"key3\";\r\n    }\r\n}).addDefault(new Callable<String>() {\r\n    @Override\r\n    public String call() throws Exception {\r\n        return \"default\";\r\n    }\r\n});\r\n\r\nassertEquals(callableSwitch.call(\"key1\"), \"key1\");\r\nassertEquals(callableSwitch.call(\"key2\"), \"key2\");\r\nassertEquals(callableSwitch.call(\"key3\"), \"key3\");\r\nassertEquals(callableSwitch.call(\"key4\"), \"default\");\r\n\r\n```\r\n\r\n### Callback example\r\n\r\n```java\r\n```\r\n\r\n### Function example\r\n\r\n```java\r\n```\r\n\r\n## Documentation\r\n\r\n[JavaDoc](../../doc/index.html)\r\n\r\n## License\r\n\r\n[LGPL v. 3](https://www.gnu.org/licenses/lgpl-3.0.en.html)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}